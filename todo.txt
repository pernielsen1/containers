ToDo:
try asynk to fastapi.....


locust - can be done with send_and_wait now... 

run 100000 transactions with two queue workers. 
My QEUE  manager to take queue and command as input argc > 0 then ... 
Queu manager to implement the wait for encapsulate there...




move the establish sockets to receive forever... i.e. to the thread.. 


Logging: 
check the the setlogger with name & logger ? 
add name in the logger function.
add set level to logger function..

check failed tests on fastapi... 

Qeuue - workers more long term... 
establish a queue to queue which is only one worker  - that's how you would want it.

Locust... take it in lab first ...  incl redis in lab "pip install locust
https://manojsingh0302.medium.com/load-test-redis-with-locust-io-in-python-b59d38724054

make the server & client to just workers... then we can harmonize.. (maybe.. - still need to share the socket.. )


establish tabs in ubuntu consoles.
https://unix.stackexchange.com/questions/492365/opening-new-gnome-terminal-v3-28-with-multiple-tabs-and-different-commands


# https://unix.stackexchange.com/questions/492365/opening-new-gnome-terminal-v3-28-with-multiple-tabs-and-different-commands


https://stackoverflow.com/questions/51437139/execute-a-command-in-a-rate-by-n-requests-per-second

Improvements:
change the tests in common to execute suite based on names ? just like for the crypto app
Queing:
https://icepanel.medium.com/top-6-message-queues-for-distributed-architectures-a3cbabf08993
https://betterstack.com/community/comparisons/redis-vs-kafka/

# and then start to dig into socket application ? 
https://nginx.org/en/docs/stream/ngx_stream_core_module.html
https://www.datacamp.com/tutorial/python-redis-beginner-guide

in validation build general validation request - 
with fields to be mandatory and type
In C- dive into the libcurl..
https://medium.com/@albert.kim/understanding-user-authentication-in-your-web-app-and-how-to-implement-it-part-1-the-high-level-ab91336ab77c

# change console colours - even better tabs in windows terminal
# https://superuser.com/questions/1486054/windows-terminal-predefined-tabs-on-startup
# sudo apt install mysql-client-core-8.0 should be another on ubuntu !
# https://github.com/pernielsen1/containers/security/dependabot/2
# make the fastapi a "alpine installation" ? 
# 

# select virtual env press ctrl-shift-p  then python:select interpretator

# https://www.geeksforgeeks.org/post-query-parameters-in-fastapi/
# https://stackoverflow.com/questions/62553709/how-to-get-the-name-of-all-container-in-docker-using-docker-py
# https://stackoverflow.com/questions/67663970/optimal-way-to-initialize-heavy-services-only-once-in-fastapi
# https://restfulapi.net/http-methods/

# TODO

Resources FASTAPI
# https://medium.com/@sadhu1998/hosting-multiple-services-on-docker-using-nginx-reverse-proxy-3cef6b01a5cf
# https://stackoverflow.com/questions/42567475/docker-compose-check-if-mysql-connection-is-ready
# https://fastapi.tiangolo.com/tutorial/first-steps/
# https://medium.com/@mizutori/fastapi-study-diary-1-creating-a-docker-container-for-development-78a003cbd51f
# https://docs.docker.com/get-started/docker-concepts/running-containers/multi-container-applications/
# https://medium.com/@alidu143/containerizing-fastapi-app-with-docker-a-comprehensive-guide-416521b2457c
# and now gedit is working after disabiling systemd in /etc/wsl.conf and test_rest client has a run script
# https://medium.com/@adebisiolayinka30/containerize-a-fastapi-app-using-nginx-as-a-proxy-part-one-42d3384d4722
# https://www.docker.com/blog/how-to-use-the-official-nginx-docker-image/
# the build ./app means use Dockerfile in app directory  https://docs.docker.com/reference/compose-file/build/
#. If it does have an entrypoint (entrypoint:, docker run --entrypoint ..., ENTRYPOINT), it's the entrypoint, which gets passed the command as arguments.
# 
# build fastapi_venv needs the requirements as well - we missed the pycryptodome
# https://learn.microsoft.com/en-us/azure/architecture/best-practices/api-design
# https://medium.com/@hillarywando/how-to-create-a-basic-crud-api-using-python-flask-cd68ef5fd7e3
# https://medium.com/@akshatgadodia/simplify-database-management-with-docker-compose-a-comprehensive-guide-f33816ff4bc3
# https://fastapi.tiangolo.com/tutorial/path-params/#data-conversion
# https://jnikenoueba.medium.com/how-to-create-routes-with-fastapi-42742f9d2cc1

